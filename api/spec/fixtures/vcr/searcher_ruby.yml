---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/customsearch/v1?cx=5dc8fc8d844008985&key=AIzaSyBcok7Z74CGQDgezKDVt6JPAZGHuWDMXEQ&q=ruby&start=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Sat, 21 Nov 2020 07:55:27 GMT
      Server:
      - ESF
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 21 Nov 2020 07:55:27 GMT
- request:
    method: get
    uri: https://api.bing.microsoft.com/v7.0/search?offset=0&q=ruby
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Ocp-Apim-Subscription-Key:
      - 74684aa71f3d4ba6b411731d26468f02
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private, max-age=0
      Transfer-Encoding:
      - chunked
      Content-Type:
      - application/json; charset=utf-8
      Expires:
      - Sat, 21 Nov 2020 07:54:27 GMT
      Vary:
      - Accept-Encoding
      P3p:
      - CP="NON UNI COM NAV STA LOC CURa DEVa PSAa PSDa OUR IND"
      Bingapis-Traceid:
      - 679C12E0AFD74738A3963BA5677C7CC2
      Bingapis-Sessionid:
      - C3EAE3A491804FD09244F851E5FA906F
      X-Msedge-Clientid:
      - 226801491CE9699E340F0EC01D14686A
      X-Msapi-Userstate:
      - 6e05
      Bingapis-Market:
      - es-XL
      X-Search-Responseinfo:
      - InternalResponseTime=308,MSDatacenter=BN2B
      X-Msedge-Ref:
      - 'Ref A: 679C12E0AFD74738A3963BA5677C7CC2 Ref B: BLUEDGE0315 Ref C: 2020-11-21T07:55:27Z'
      Apim-Request-Id:
      - e26030d1-c1c3-4ce0-ae9d-f22a82d7ad58
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Content-Type-Options:
      - nosniff
      Csp-Billing-Usage:
      - CognitiveServices.BingSearchV7.Transaction=1
      Date:
      - Sat, 21 Nov 2020 07:55:27 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 21 Nov 2020 07:55:28 GMT
recorded_with: VCR 6.0.0
